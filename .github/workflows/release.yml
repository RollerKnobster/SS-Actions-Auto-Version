name: release
on:
  push:
    tags:
      - 'v*'

env:
  DOCKER_USERNAME: thedoorknobster
  REPO: thedoorknobster/sample-app

jobs:
  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Fetch all commits
          fetch-depth: 0

      - name: Set environment variables
        run: |
          cat >> $GITHUB_ENV << EOF
          VERSION=${GITHUB_REF##*/}
          EOF

      - name: Build and push
        run: echo "${{ env.REPO }}:latest,${{ env.REPO }}:${{ env.VERSION }}"

      - name: Create Release Notes
        if: ${{ !startsWith(github.ref, 'refs/tags/')
          && !( contains(env.VERSION, 'alpha')
          || contains(env.VERSION, 'beta')
          || contains(env.VERSION, 'rc')) }}
        uses: actions/github-script@v4.0.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.request(`POST /repos/${{ github.repository }}/releases`, {
              tag_name: "${{ env.VERSION }}",
              generate_release_notes: true
            });
      - name: Create Pre-Release Notes
        if: ${{ !startsWith(github.ref, 'refs/tags/')
          && ( contains(env.VERSION, 'alpha')
          || contains(env.VERSION, 'beta')
          || contains(env.VERSION, 'rc')) }}
        uses: actions/github-script@v4.0.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.request(`POST /repos/${{ github.repository }}/releases`, {
              tag_name: "${{ env.VERSION }}",
              generate_release_notes: true,
              prerelease: true
            });
            
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # provided by Actions
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: RELEASE.md
          draft: true
          prerelease: false
