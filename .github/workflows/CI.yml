name: CI
on:
  workflow_dispatch: 
  push:
    branches:
      - main

env:
  REPO: thedoorknobster/sample-app

jobs:
  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Fetch all commits
          fetch-depth: 0
      - name: PARAMETROS
        run: echo "1.0.${GITHUB_RUN_NUMBER}.${GITHUB_RUN_ID}"
        
      - name: Semantic versioning
        id: paulhatchversioning
        uses: PaulHatch/semantic-version@v4.0.2
        with:
          branch: main
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "v${major}.${minor}.${patch}" #-rc${increment}

      - name: Bump version and push tag
        id: mathieudutourtag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true

      - name: Bump version and push tag
        id: anothrNicktagversion
        uses: anothrNick/github-tag-action@1.64.0 # Don't use @master or @v1 unless you're happy to test the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
          DEFAULT_BRANCH: main
          WITH_V: true
          #PRERELEASE: true
          DRY_RUN: true

      - name: Build and push
        run: |-
          echo "${{ env.REPO }}:latest,${{ env.REPO }}"
          echo "paulhatchversioning --"  
          echo "version: ${{ steps.paulhatchversioning.outputs.version }}"  
          echo "version_tag: ${{ steps.paulhatchversioning.outputs.version_tag }}" 

          echo "mathieudutourtag_version --"  
          echo "previous_version: ${{ steps.mathieudutourtag_version.outputs.previous_version }}"  
          echo "previous_tag: ${{ steps.mathieudutourtag_version.outputs.previous_tag }}"  
          echo "new_version: ${{ steps.mathieudutourtag_version.outputs.new_version }}"  
          echo "new_tag: ${{ steps.mathieudutourtag_version.outputs.new_tag }}"  

          echo "anothrNicktagversion --"  
          echo "old_tag: ${{ steps.anothrNicktagversion.outputs.old_tag }}"  
          echo "new_tag: ${{ steps.anothrNicktagversion.outputs.new_tag }}" 
          
      # - name: Create Release
      #   if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.github_token }}
      #   with:
      #     tag_name: ${{ steps.versioning.outputs.version }}
      #     release_name: ${{ steps.versioning.outputs.version }}
      #     draft: true
      #     prerelease: true
